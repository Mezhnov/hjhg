from flask import Flask, jsonify, request, render_template_string

app = Flask(__name__)

# Sample HTML content with embedded CSS
html_content = """
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Пример HTML страницы</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }
        h1 {
            color: #333;
        }
        p {
            color: #666;
        }
    </style>
</head>
<body>
    <div>
        <h1>Добро пожаловать на страницу</h1>
        <p>Это пример HTML и CSS, отображаемых в PyQt приложении.</p>
    </div>
</body>
</html>
"""

# API endpoint to get data
@app.route('/api/data', methods=['GET'])
def get_data():
    # Sample data to send to the PyQt client
    return jsonify({"message": "Привет! Это данные с сервера."})

# API endpoint to receive data
@app.route('/api/data/send', methods=['POST'])
def send_data():
    data = request.get_json()
    value = data.get("value", None)
    if value is not None:
        response_message = f"Вы отправили значение: {value}"
        return jsonify({"response": response_message})
    return jsonify({"response": "Ошибка: Значение не получено"}), 400

# Endpoint to serve the HTML content
@app.route('/html')
def serve_html():
    return render_template_string(html_content)

if __name__ == '__main__':
    # Run the server on all available IPs, port 5000
    app.run(host='0.0.0.0', port=5000)
