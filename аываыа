#include <windows.h>
#include <gdiplus.h>
#include <string>
#include <sstream>
#include <locale>
#include <codecvt>
#include <mmsystem.h> // Для PlaySound
#include <CommCtrl.h> // Для стандартных элементов управления
#include <richedit.h> // Для RichEdit
#include "resource.h" // Для ID ресурсов

#define IDR_WAVE1 101
#define IDR_WAVE2 102
#define IDR_WAVE3 103
#define IDR_WAVE4 104

#pragma comment(lib, "gdiplus.lib")
#pragma comment(lib, "comctl32.lib")
#pragma comment(lib, "winmm.lib") // Для PlaySound

// Глобальные переменные
HINSTANCE hInst;
HWND hwndInput;
HWND hwndEdit;
HWND hwndBackground;
std::wstring backgroundImagePath = L"C:\\path_to_your_image.jpg"; // Замените на путь к вашему изображению

// Прототипы функций
LRESULT CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);
void CreateInputDialog(HWND hwnd);
void LoadBackgroundImage(HWND hwnd);

// Главная функция программы
int APIENTRY wWinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPWSTR lpCmdLine, int nCmdShow)
{
    // Инициализация библиотеки GDI+
    Gdiplus::GdiplusStartupInput gdiplusStartupInput;
    ULONG_PTR gdiplusToken;
    Gdiplus::GdiplusStartup(&gdiplusToken, &gdiplusStartupInput, NULL);

    // Регистрация класса окна
    WNDCLASS wc = {0};
    wc.lpfnWndProc = WndProc;
    wc.hInstance = hInstance;
    wc.lpszClassName = L"UserInputWindowClass";
    wc.hCursor = LoadCursor(NULL, IDC_ARROW);
    RegisterClass(&wc);

    // Создание окна
    HWND hwnd = CreateWindowEx(0, L"UserInputWindowClass", L"Enter Username", WS_OVERLAPPEDWINDOW | WS_VISIBLE,
        CW_USEDEFAULT, CW_USEDEFAULT, 800, 600, NULL, NULL, hInstance, NULL);

    // Инициализация элементов интерфейса
    hwndBackground = hwnd;
    CreateInputDialog(hwnd);

    // Главный цикл обработки сообщений
    MSG msg;
    while (GetMessage(&msg, NULL, 0, 0))
    {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }

    // Завершение работы с GDI+
    Gdiplus::GdiplusShutdown(gdiplusToken);

    return (int)msg.wParam;
}

// Обработчик сообщений
LRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)
{
    switch (msg)
    {
    case WM_CREATE:
        // Загрузить фоновое изображение
        LoadBackgroundImage(hwnd);
        break;

    case WM_KEYDOWN:
        if (wParam == VK_ESCAPE)
        {
            PostMessage(hwnd, WM_CLOSE, 0, 0); // Закрыть окно при нажатии ESC
        }
        break;

    case WM_DESTROY:
        PostQuitMessage(0);
        break;

    default:
        return DefWindowProc(hwnd, msg, wParam, lParam);
    }

    return 0;
}

// Функция для создания диалога с вводом имени пользователя
void CreateInputDialog(HWND hwnd)
{
    // Создание текста
    CreateWindowEx(0, L"STATIC", L"Please enter your username:",
        WS_CHILD | WS_VISIBLE | SS_CENTER, 50, 150, 700, 30, hwnd, NULL, hInst, NULL);

    // Создание поля ввода
    hwndEdit = CreateWindowEx(0, L"EDIT", L"",
        WS_CHILD | WS_VISIBLE | WS_BORDER | ES_AUTOHSCROLL, 50, 200, 700, 30, hwnd, NULL, hInst, NULL);
}

// Функция для загрузки фонового изображения
void LoadBackgroundImage(HWND hwnd)
{
    HDC hdc = GetDC(hwnd);
    Gdiplus::Graphics graphics(hdc);

    // Загрузка изображения
    Gdiplus::Image image(backgroundImagePath.c_str());
    graphics.DrawImage(&image, 0, 0, 800, 600);

    ReleaseDC(hwnd, hdc);
}
