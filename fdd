#include <windows.h>
#include <gdiplus.h>
#include <string>

#pragma comment(lib, "gdiplus.lib")

using namespace Gdiplus;

// Объявляем переменную для изображения на уровне модуля
Image* backgroundImage = nullptr;

LRESULT CALLBACK WindowProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam) {
    switch (uMsg) {
        case WM_DESTROY:
            delete backgroundImage; // Удаляем изображение
            PostQuitMessage(0);
            return 0;

        case WM_KEYDOWN:
            // Проверяем нажатие клавиши Esc
            if (wParam == VK_ESCAPE) {
                DestroyWindow(hwnd); // Закрыть окно
            }
            return 0;

        case WM_PAINT: {
            PAINTSTRUCT ps;
            HDC hdc = BeginPaint(hwnd, &ps);
            if (backgroundImage) {
                Graphics graphics(hdc);
                graphics.DrawImage(backgroundImage, 0, 0, ps.rcPaint.right, ps.rcPaint.bottom);
            }
            EndPaint(hwnd, &ps);
            return 0;
        }

        default:
            return DefWindowProc(hwnd, uMsg, wParam, lParam);
    }
}

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE, LPSTR, int nCmdShow) {
    const wchar_t CLASS_NAME[] = L"FullscreenWindowClass";

    // Инициализация GDI+
    GdiplusStartupInput gdiplusStartupInput;
    ULONG_PTR gdiplusToken;
    GdiplusStartup(&gdiplusToken, &gdiplusStartupInput, NULL);

    // Определяем класс окна
    WNDCLASS wc = {};
    wc.lpfnWndProc = WindowProc;
    wc.hInstance = hInstance;
    wc.lpszClassName = CLASS_NAME;
    wc.hCursor = LoadCursor(NULL, IDC_ARROW);
    wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);

    RegisterClass(&wc);

    // Получаем размеры экрана
    int screenWidth = GetSystemMetrics(SM_CXSCREEN);
    int screenHeight = GetSystemMetrics(SM_CYSCREEN);

    // Создаем окно
    HWND hwnd = CreateWindowEx(
        WS_EX_TOPMOST, // Окно всегда поверх остальных
        CLASS_NAME,
        L"My Fullscreen Window",
        WS_POPUP, // Убираем рамку окна
        0, 0, screenWidth, screenHeight, // Положение и размер окна
        NULL,
        NULL,
        hInstance,
        NULL
    );

    if (hwnd == NULL) return 0;

    // Загружаем изображение (замените путь к изображению)
    std::wstring imagePath = L"path_to_your_image.jpg"; // Путь к изображению
    backgroundImage = new Image(imagePath.c_str());

    ShowWindow(hwnd, nCmdShow);

    // Главный цикл сообщений
    MSG msg = {};
    while (GetMessage(&msg, NULL, 0, 0)) {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }

    // Завершаем работу GDI+
    GdiplusShutdown(gdiplusToken);

    return 0;
}
