import logging
from flask import Flask, request, jsonify, render_template

app = Flask(__name__)

# Configure logging
logging.basicConfig(filename='server.log', level=logging.INFO,
                    format='%(asctime)s - %(levelname)s - %(message)s')

@app.before_request
def log_request_info():
    """Logs details about each incoming request."""
    client_ip = request.remote_addr
    request_method = request.method
    request_path = request.path
    logging.info(f"Client IP: {client_ip} - Method: {request_method} - Path: {request_path}")

# Route to serve the HTML page
@app.route('/')
def index():
    return render_template('index.html')

# Route for API data
@app.route('/api/data', methods=['GET'])
def get_data():
    data = {"message": "Привет из Flask API!"}
    logging.info("Data requested by client.")
    return jsonify(data)

# Route to receive data from client
@app.route('/api/data/send', methods=['POST'])
def receive_data():
    try:
        # Get data from JSON request
        data = request.json
        value = data.get("value")
        logging.info(f"Received value from client: {value}")

        # Respond to client
        return jsonify({"response": f"Получено значение: {value}"}), 200
    except Exception as e:
        logging.error(f"Error receiving data: {e}")
        return jsonify({"error": str(e)}), 400

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)
