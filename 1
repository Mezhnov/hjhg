case WM_PAINT: {
    PAINTSTRUCT ps;
    HDC hdc = BeginPaint(hwnd, &ps);
    Graphics graphics(hdc);

    // Настройки высококачественного рендеринга
    graphics.SetSmoothingMode(SmoothingModeHighQuality);
    graphics.SetInterpolationMode(InterpolationModeHighQualityBicubic);
    graphics.SetPixelOffsetMode(PixelOffsetModeHighQuality);

    // Получение размеров окна
    RECT windowRect;
    GetClientRect(hwnd, &windowRect);

    // Рисование фонового изображения (если требуется)
    if (backgroundImage) {
        // Ваш код для рисования фонового изображения
    }

    // Рисование серой нижней панели
    RECT panelRect = { 0, windowRect.bottom - 40, windowRect.right, windowRect.bottom };
    HBRUSH hBrush = CreateSolidBrush(RGB(200, 200, 200)); // Светло-серая панель
    FillRect(hdc, &panelRect, hBrush);
    DeleteObject(hBrush);

    // Рисование иконок Wi-Fi, Звука и Батареи
    if (wifiIcon && soundIcon && batteryIcon) {
        float iconSize = 24.0f; // Размер иконки
        float iconY = static_cast<float>(windowRect.bottom - 40 + (40 - iconSize) / 2.0f); // Центрирование по вертикали

        float padding = 15.0f; // Отступ от левого края
        float spacing = 10.0f; // Расстояние между иконками

        // Рисование иконки Wi-Fi
        graphics.DrawImage(wifiIcon, padding, iconY, iconSize, iconSize);

        // Рисование иконки Звука
        float currentX = padding + iconSize + spacing;
        graphics.DrawImage(soundIcon, currentX, iconY, iconSize, iconSize);

        // Рисование иконки Батареи
        currentX += iconSize + spacing;
        graphics.DrawImage(batteryIcon, currentX, iconY, iconSize, iconSize);
    }

    // Получение текущего времени и выбранного языка
    std::wstring timeString = GetCurrentTimeString();
    std::wstring langString = languages[currentLanguageIndex]; // Текущий язык

    // Настройка шрифта и кисти для текста
    FontFamily fontFamilyObj(L"Segoe UI");
    Font font(&fontFamilyObj, 14, FontStyleRegular, UnitPixel);
    SolidBrush textBrush(Color(255, 0, 0, 0)); // Черный цвет текста

    // Измерение размеров текста
    RectF timeRect;
    graphics.MeasureString(timeString.c_str(), -1, &font, PointF(0, 0), &timeRect);
    RectF langRect;
    graphics.MeasureString(langString.c_str(), -1, &font, PointF(0, 0), &langRect);

    // Позиционирование текста слева на панели
    float textX = 15.0f; // Отступ от левого края
    float textY = static_cast<float>(windowRect.bottom - 40 + (40 - timeRect.Height) / 2.0f - 2); // Центрирование по вертикали

    // Рисование языковой метки
    graphics.DrawString(langString.c_str(), -1, &font, PointF(textX, textY), &textBrush);

    // Рисование текущего времени рядом с языковой меткой
    textX += langRect.Width + 10.0f; // Отступ между языком и временем
    graphics.DrawString(timeString.c_str(), -1, &font, PointF(textX, textY), &textBrush);

    // Рисование объявлений или других элементов поверх (если требуется)
    // Ваш существующий код для объявления "Представляем Orega OS..."

    // Рисование дополнительных изображений и их заголовков (если требуется)
    // Ваш существующий код для рисования дополнительных изображений

    EndPaint(hwnd, &ps);
    return 0;
}
