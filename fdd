// Draw sidebar
if (sidebarImage) {
    float sidebarWidth = 200.0f;
    graphics.DrawImage(sidebarImage, 0.0f, 0.0f, sidebarWidth, static_cast<REAL>(windowRect.bottom));
}

// Draw background image while maintaining aspect ratio
if (backgroundImage) {
    UINT imgWidth = backgroundImage->GetWidth();
    UINT imgHeight = backgroundImage->GetHeight();

    double windowAspect = static_cast<double>(windowRect.right - 200) / windowRect.bottom; // Adjust for sidebar
    double imageAspect = static_cast<double>(imgWidth) / imgHeight;

    double drawWidth, drawHeight;
    if (windowAspect > imageAspect) {
        // Window is wider than image
        drawHeight = windowRect.bottom;
        drawWidth = imageAspect * drawHeight;
    }
    else {
        // Window is narrower or equal to image
        drawWidth = windowRect.right - 200;
        drawHeight = drawWidth / imageAspect;
    }

    float x = static_cast<float>(200 + ((windowRect.right - 200) - drawWidth) / 2.0);
    float y = static_cast<float>((windowRect.bottom - drawHeight) / 2.0);
    graphics.DrawImage(backgroundImage, x, y, static_cast<REAL>(drawWidth), static_cast<REAL>(drawHeight));
}

// Draw Wi-Fi, Sound, and Battery Icons
if (wifiIcon && soundIcon && batteryIcon) {
    float iconSize = 24.0f; // Icon size
    float iconY = static_cast<float>(windowRect.bottom - 40 + (40 - iconSize) / 2.0); // Center vertically

    // Positions with padding
    float padding = 15.0f;
    float currentX = 200.0f + padding + 1280.0f; // Adjusted for sidebar

    // Ensure the icons fit within the window
    if (currentX + iconSize * 3 + 30.0f > windowRect.right) {
        // Adjust spacing or size if necessary
        currentX = windowRect.right - iconSize * 3 - 30.0f;
    }

    // Draw Wi-Fi Icon
    graphics.DrawImage(wifiIcon, currentX, iconY, iconSize, iconSize);
    currentX += iconSize + 10.0f; // Move to next icon position

    // Draw Sound Icon
    graphics.DrawImage(soundIcon, currentX, iconY, iconSize, iconSize);
    currentX += iconSize + 10.0f;

    // Draw Battery Icon
    graphics.DrawImage(batteryIcon, currentX, iconY, iconSize, iconSize);
    currentX += iconSize + 30.0f; // Extra spacing before language and time
}
