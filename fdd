#include <windows.h>
#include <gdiplus.h>
#include <wininet.h>
#include <string>
#include <vector>
#include <chrono>
#include <iomanip>
#include <sstream>
#include <locale>
#include <codecvt>

#pragma comment(lib, "gdiplus.lib")
#pragma comment(lib, "wininet.lib")

using namespace Gdiplus;

// Объявляем переменную для изображения на уровне модуля
Image* backgroundImage = nullptr;

// Функция для загрузки изображения из URL
bool LoadImageFromURL(const std::wstring& url) {
    HINTERNET hInternet = InternetOpen(L"ImageLoader", INTERNET_OPEN_TYPE_DIRECT, NULL, NULL, 0);
    if (!hInternet) return false;

    HINTERNET hConnect = InternetOpenUrl(hInternet, url.c_str(), NULL, 0, INTERNET_FLAG_RELOAD | INTERNET_FLAG_NO_CACHE_WRITE, 0);
    if (!hConnect) {
        InternetCloseHandle(hInternet);
        return false;
    }

    // Создаем буфер для хранения данных изображения
    std::vector<BYTE> buffer;
    BYTE tempBuffer[1024];
    DWORD bytesRead = 0;

    // Читаем данные изображения
    while (InternetReadFile(hConnect, tempBuffer, sizeof(tempBuffer), &bytesRead) && bytesRead != 0) {
        buffer.insert(buffer.end(), tempBuffer, tempBuffer + bytesRead);
    }

    // Закрываем дескрипторы
    InternetCloseHandle(hConnect);
    InternetCloseHandle(hInternet);

    // Проверяем, получили ли мы данные
    if (buffer.empty()) {
        return false;
    }

    // Загружаем изображение в GDI+
    IStream* stream = SHCreateMemStream(buffer.data(), buffer.size());
    if (!stream) {
        return false;
    }

    backgroundImage = new Image(stream);
    stream->Release();

    return backgroundImage && backgroundImage->GetLastStatus() == Ok;
}

// Функция для получения текущего времени в строковом формате (без изменений)
std::wstring GetCurrentTimeString() {
    // ... ваш код ...
}

// Процедура окна (без изменений)
LRESULT CALLBACK WindowProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam) {
    // ... ваш код ...
}

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE, LPSTR, int nCmdShow) {
    const wchar_t CLASS_NAME[] = L"FullscreenWindowClass";

    // Инициализация GDI+
    GdiplusStartupInput gdiplusStartupInput;
    ULONG_PTR gdiplusToken;
    GdiplusStartup(&gdiplusToken, &gdiplusStartupInput, NULL);

    // Определяем класс окна (без изменений)
    // ... ваш код ...

    // Получаем размеры экрана (без изменений)
    // ... ваш код ...

    // Создаем окно (без изменений)
    // ... ваш код ...

    if (hwnd == NULL) {
        GdiplusShutdown(gdiplusToken);
        return 0;
    }

    // Загрузка изображения из URL
    std::wstring imageUrl = L"https://your-image-url.com/image.jpg"; // Укажите ваш URL изображения
    if (!LoadImageFromURL(imageUrl)) {
        MessageBox(hwnd, L"Не удалось загрузить изображение из URL.", L"Ошибка", MB_ICONERROR);
        GdiplusShutdown(gdiplusToken);
        return 0;
    }

    ShowWindow(hwnd, nCmdShow);

    // Главный цикл сообщений (без изменений)
    MSG msg = {};
    while (GetMessage(&msg, NULL, 0, 0)) {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }

    // Завершаем работу GDI+
    GdiplusShutdown(gdiplusToken);

    return 0;
}
