  // Рисование панели, похожей на macOS Dock
  {
      // Параметры Dock
      float dockWidth = 600.0f; // Ширина Dock
      float dockHeight = 60.0f; // Высота Dock
      float dockX = (windowRect.right - dockWidth) / 2.0f; // Центрирование по горизонтали
      float dockY = windowRect.bottom - dockHeight - 20.0f; // Отступ от нижнего края

      // Создание пути с округленными углами
      GraphicsPath path;
      float radius = dockHeight / 2.0f; // Радиус закругления
      path.AddArc(dockX, dockY, dockHeight, dockHeight, 180, 90); // Левый нижний угол
      path.AddArc(dockX + dockWidth - dockHeight, dockY, dockHeight, dockHeight, 270, 90); // Правый нижний угол
      path.AddArc(dockX + dockWidth - dockHeight, dockY, dockHeight, dockHeight, 0, 90); // Правый верхний угол
      path.AddArc(dockX, dockY, dockHeight, dockHeight, 90, 90); // Левый верхний угол
      path.CloseFigure();

      // Создание полупрозрачной кисти
      SolidBrush dockBrush(Color(180, 255, 255, 255)); // Белый цвет с прозрачностью
      graphics.FillPath(&dockBrush, &path);

      // Отрисовка тени под Dock (опционально)
      SolidBrush shadowBrush(Color(50, 0, 0, 0)); // Черный цвет с прозрачностью
      graphics.TranslateTransform(0, 5); // Смещение вниз для тени
      graphics.FillPath(&shadowBrush, &path);
      graphics.TranslateTransform(0, -5); // Возврат обратно

      // Рисование иконок на Dock
      std::vector<Image*> dockIcons = { mypassIcon, browser, office, newfolder };
      float iconSize = 48.0f;
      float iconSpacing = 10.0f;
      float totalIconsWidth = dockIcons.size() * iconSize + (dockIcons.size() - 1) * iconSpacing;
      float iconsStartX = dockX + (dockWidth - totalIconsWidth) / 2.0f;
      float iconY = dockY + (dockHeight - iconSize) / 2.0f;

      for (size_t i = 0; i < dockIcons.size(); ++i) {
          float iconX = iconsStartX + i * (iconSize + iconSpacing);
          graphics.DrawImage(dockIcons[i], iconX, iconY, iconSize, iconSize);
      }
  }
