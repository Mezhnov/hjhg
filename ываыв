#include <windows.h>
#include <gdiplus.h>
#include <wininet.h>
#include <string>
#include <vector>
#include <chrono>
#include <iomanip>
#include <sstream>
#include <locale>
#include <codecvt>
#include <windowsx.h>
#include <mmsystem.h>  // For PlaySound
#include <CommCtrl.h>  // For common controls
#include <richedit.h>  // For rich edit controls
#include "resource.h"  // Ensure you have this header for resource IDs

// Link the necessary libraries
#pragma comment(lib, "gdiplus.lib")
#pragma comment(lib, "wininet.lib")
#pragma comment(lib, "comctl32.lib")
#pragma comment(lib, "Msftedit.lib")
#pragma comment(lib, "Winmm.lib")

// Global variables
HINSTANCE hInst;
HWND hEdit;
HWND hOutput;

// Function declarations
LRESULT CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);
void ExecuteCode(const std::wstring& code);

int APIENTRY wWinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPWSTR lpCmdLine, int nCmdShow)
{
    hInst = hInstance;

    // Initialize common controls
    INITCOMMONCONTROLSEX icex = { sizeof(INITCOMMONCONTROLSEX) };
    icex.dwICC = ICC_WIN95_CLASSES;
    InitCommonControlsEx(&icex);

    // Load RichEdit Library
    LoadLibrary(TEXT("Msftedit.dll"));

    WNDCLASSEX wcex;
    wcex.cbSize = sizeof(WNDCLASSEX);
    wcex.style          = CS_HREDRAW | CS_VREDRAW;
    wcex.lpfnWndProc    = WndProc;
    wcex.cbClsExtra     = 0;
    wcex.cbWndExtra     = 0;
    wcex.hInstance      = hInst;
    wcex.hIcon          = LoadIcon(nullptr, IDI_APPLICATION);
    wcex.hCursor        = LoadCursor(nullptr, IDC_ARROW);
    wcex.hbrBackground  = (HBRUSH)(COLOR_WINDOW+1);
    wcex.lpszMenuName   = nullptr;
    wcex.lpszClassName  = L"MyIDEClass";
    wcex.hIconSm        = LoadIcon(nullptr, IDI_APPLICATION);

    RegisterClassEx(&wcex);

    HWND hWnd = CreateWindowW(L"MyIDEClass", L"Simple IDE", WS_OVERLAPPEDWINDOW,
      CW_USEDEFAULT, 0, 800, 600, nullptr, nullptr, hInst, nullptr);

    if (!hWnd)
    {
        MessageBox(nullptr, L"Main window creation failed!", L"Error", MB_OK);
        return FALSE;
    }

    ShowWindow(hWnd, nCmdShow);
    UpdateWindow(hWnd);

    // Main message loop:
    MSG msg;
    while (GetMessage(&msg, nullptr, 0, 0))
    {
         TranslateMessage(&msg);
         DispatchMessage(&msg);
    }

    return (int) msg.wParam;
}

void CreateControls(HWND hWnd)
{
    // Create the RichEdit control for code input
    hEdit = CreateWindowEx(0, MSFTEDIT_CLASS, L"",
        WS_VISIBLE | WS_CHILD | WS_BORDER | ES_MULTILINE | ES_AUTOVSCROLL | WS_VSCROLL,
        10, 10, 760, 400, hWnd, (HMENU)1, hInst, nullptr);

    // Create the Run button
    HWND hButton = CreateWindow(L"BUTTON", L"Run",
        WS_VISIBLE | WS_CHILD | BS_DEFPUSHBUTTON,
        10, 420, 100, 30, hWnd, (HMENU)2, hInst, nullptr);

    // Create the output static control
    hOutput = CreateWindow(L"STATIC", L"",
        WS_VISIBLE | WS_CHILD | WS_BORDER | SS_LEFT,
        10, 460, 760, 100, hWnd, (HMENU)3, hInst, nullptr);
}

LRESULT CALLBACK WndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
{
    switch (message)
    {
    case WM_CREATE:
        CreateControls(hWnd);
        break;
    case WM_COMMAND:
        if (LOWORD(wParam) == 2) // Run button clicked
        {
            // Get the code from the edit control
            int length = GetWindowTextLength(hEdit);
            std::wstring code(length + 1, L'\0');
            GetWindowText(hEdit, &code[0], length + 1);

            // Execute the code
            ExecuteCode(code);
        }
        break;
    case WM_DESTROY:
        PostQuitMessage(0);
        break;
    default:
        return DefWindowProc(hWnd, message, wParam, lParam);
    }
    return 0;
}

// Simple interpreter for the new language
void ExecuteCode(const std::wstring& code)
{
    std::wistringstream iss(code);
    std::wstring line;
    std::wstring output;
    std::map<std::wstring, int> variables;

    while (std::getline(iss, line))
    {
        std::wistringstream lineStream(line);
        std::wstring command;
        lineStream >> command;

        if (command == L"PRINT")
        {
            std::wstring text;
            std::getline(lineStream, text);
            // Remove leading and trailing quotes and spaces
            text = text.substr(text.find_first_not_of(L" \"'"), text.find_last_not_of(L" \"'") - text.find_first_not_of(L" \"'") + 1);
            output += text + L"\n";
        }
        else if (command == L"ADD")
        {
            std::wstring varName;
            int value;
            lineStream >> varName >> value;
            variables[varName] += value;
        }
        else if (command == L"SUB")
        {
            std::wstring varName;
            int value;
            lineStream >> varName >> value;
            variables[varName] -= value;
        }
        else if (command == L"SET")
        {
            std::wstring varName;
            int value;
            lineStream >> varName >> value;
            variables[varName] = value;
        }
        else if (command == L"DISPLAY")
        {
            std::wstring varName;
            lineStream >> varName;
            output += varName + L" = " + std::to_wstring(variables[varName]) + L"\n";
        }
        else if (command == L"END")
        {
            break;
        }
        else
        {
            output += L"Unknown command: " + command + L"\n";
        }
    }

    // Display the output
    SetWindowText(hOutput, output.c_str());
}
Сборка начата в 11:19...
1>------ Сборка начата: проект: Решение, Конфигурация: Debug x64 ------
1>Решение.cpp
1>C:\Users\User\source\repos\Решение\Решение\Решение.cpp(136,10): error C2039: "map": не является членом "std".
1>    C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.41.34120\include\codecvt(20,1):
1>     см. объявление "std"
1>C:\Users\User\source\repos\Решение\Решение\Решение.cpp(136,10): error C2065: map: необъявленный идентификатор
1>C:\Users\User\source\repos\Решение\Решение\Решение.cpp(136,19): error C2275: "std::wstring": ожидается выражение вместо типа
1>C:\Users\User\source\repos\Решение\Решение\Решение.cpp(136,28): error C2062: тип "int" не требуется
1>C:\Users\User\source\repos\Решение\Решение\Решение.cpp(157,13): error C2065: variables: необъявленный идентификатор
1>C:\Users\User\source\repos\Решение\Решение\Решение.cpp(164,13): error C2065: variables: необъявленный идентификатор
1>C:\Users\User\source\repos\Решение\Решение\Решение.cpp(171,13): error C2065: variables: необъявленный идентификатор
1>C:\Users\User\source\repos\Решение\Решение\Решение.cpp(177,58): error C2065: variables: необъявленный идентификатор
1>Сборка проекта "Решение.vcxproj" завершена с ошибкой.
========== Сборка: успешно выполнено — 0 , со сбоем — 1, в актуальном состоянии — 0, пропущено — 0 ==========
========== Сборка завершено в 11:19 и заняло 01,133 с ==========

PRINT "Welcome to the new language"
SET X 10
ADD X 5
SUB X 2
DISPLAY X
PRINT "Calculation complete"
END

