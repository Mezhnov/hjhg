#include <windows.h>
#include <commctrl.h>
#include <gdiplus.h>
#include <string>

#pragma comment(lib, "comctl32.lib")
#pragma comment(lib, "gdiplus.lib")

// Глобальные переменные
HINSTANCE hInst;
HWND hwndMain;
HWND hTabControl;

// Функции для обработки сообщений
LRESULT CALLBACK WindowProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam);
void InitTabControl(HWND hwnd);

// Точка входа в программу
int APIENTRY wWinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPWSTR lpCmdLine, int nCmdShow)
{
    // Инициализация библиотеки GDI+
    Gdiplus::GdiplusStartupInput gdiplusStartupInput;
    ULONG_PTR gdiplusToken;
    Gdiplus::GdiplusStartup(&gdiplusToken, &gdiplusStartupInput, NULL);

    // Регистрируем класс окна
    WNDCLASSEX wc = { sizeof(WNDCLASSEX), CS_HREDRAW | CS_VREDRAW, WindowProc, 0, 0, hInstance, NULL, NULL, (HBRUSH)(COLOR_WINDOW + 1), NULL, L"BIOSAnalog", NULL };
    RegisterClassEx(&wc);

    // Создаем главное окно
    hwndMain = CreateWindow(L"BIOSAnalog", L"BIOS Аналог", WS_OVERLAPPEDWINDOW, CW_USEDEFAULT, CW_USEDEFAULT, 800, 600, NULL, NULL, hInstance, NULL);
    ShowWindow(hwndMain, nCmdShow);
    UpdateWindow(hwndMain);

    // Основной цикл сообщений
    MSG msg;
    while (GetMessage(&msg, NULL, 0, 0))
    {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }

    // Остановка GDI+
    Gdiplus::GdiplusShutdown(gdiplusToken);
    return (int)msg.wParam;
}

// Инициализация вкладок
void InitTabControl(HWND hwnd)
{
    // Создаем контрол вкладок
    hTabControl = CreateWindow(WC_TABCONTROL, L"", WS_CHILD | WS_VISIBLE | WS_BORDER, 10, 10, 760, 450, hwnd, (HMENU)IDC_TABCONTROL, hInst, NULL);

    // Добавляем вкладки
    TCITEM tci = { 0 };
    tci.mask = TCIF_TEXT;

    tci.pszText = L"Основные";
    TabCtrl_InsertItem(hTabControl, 0, &tci);

    tci.pszText = L"Система";
    TabCtrl_InsertItem(hTabControl, 1, &tci);

    tci.pszText = L"Сеть";
    TabCtrl_InsertItem(hTabControl, 2, &tci);

    tci.pszText = L"Дополнительно";
    TabCtrl_InsertItem(hTabControl, 3, &tci);
}

// Обработка сообщений окна
LRESULT CALLBACK WindowProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
    switch (uMsg)
    {
    case WM_CREATE:
        InitTabControl(hwnd);
        return 0;
        
    case WM_COMMAND:
        // Обработка команд, например, кнопок
        if (LOWORD(wParam) == IDC_GO_BUTTON)
        {
            MessageBox(hwnd, L"Вы нажали кнопку GO", L"Сообщение", MB_OK);
        }
        return 0;

    case WM_NOTIFY:
        if (((LPNMHDR)lParam)->code == TCN_SELCHANGE)
        {
            int sel = TabCtrl_GetCurSel(hTabControl);
            // Здесь можно обновлять интерфейс в зависимости от выбранной вкладки
            MessageBox(hwnd, (L"Вы выбрали вкладку #" + std::to_wstring(sel)).c_str(), L"Выбор вкладки", MB_OK);
        }
        return 0;

    case WM_DESTROY:
        PostQuitMessage(0);
        return 0;

    default:
        return DefWindowProc(hwnd, uMsg, wParam, lParam);
    }
}
